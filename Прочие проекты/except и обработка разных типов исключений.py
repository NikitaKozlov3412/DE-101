# Встроенные типы исключений

try:
    number = int(input("Введите число: "))
    print("Введенное число:", number)
except ValueError:
    print("Преобразование прошло неудачно")
print("Завершение программы")


print("\n")


'''
если ситуация такова, что в программе могут быть сгенерированы различные 
типы исключений, то мы можем их обработать по отдельности, используя 
дополнительные выражения except. И при возникновении исключения Python 
будет искать нужный блок except, который обрабатывает данный тип исключения:
'''

try:
    number1 = int(input("Введите первое число: "))
    number2 = int(input("Введите второе число: "))
    print("Результат деления:", number1/number2)
except ValueError:
    print("Преобразование прошло неудачно")
except ZeroDivisionError:
    print("Попытка деления числа на ноль")
except BaseException:
    print("Общее исключение")
print("Завершение программы")


print("\n")


'''
Python позволяет в одном блоке except обрабатывать сразу несколько 
типов исключений. В этом случае все типы исключения передаются в скобках:
'''

try:
    number1 = int(input("Введите первое число: "))
    number2 = int(input("Введите второе число: "))
    print("Результат деления:", number1/number2)
except (ZeroDivisionError, ValueError):    #  обработка двух типов исключений - ZeroDivisionError и ValueError
    print("Попытка деления числа на ноль или некорректный ввод")
 
print("Завершение программы")

print("\n")


# Получение информации об исключении

'''
С помощью оператора as мы можем передать всю информацию об исключении 
в переменную, которую затем можно использовать в блоке except:
'''

try:
    number = int(input("Введите число: "))
    print("Введенное число:", number)
except ValueError as e:
    print("Сведения об исключении", e)
print("Завершение программы")

print("\n")
