# -*- coding: utf-8 -*-

'''
Вопрос 1
Каким будет результат работы следующей программы:
'''

'''
s = set()
print(s.pop())
'''


'''
Вопрос 2
Каким будет результат работы следующей программы:
'''

set1 = { 1, 2, 3, 4, 5}
set2 = {3, 5, 6, 7}
print(set1 ^ set2)


'''
Вопрос 3
Каким будет результат работы следующей программы:
'''

set1 = { 5, 10, 20, 30}
set2 = {20, 25, 35}
set1.intersection_update(set2)
print(set1)


'''
Вопрос 4
Каким будет результат работы следующей программы:
'''

'''
a = {1, 2, 3}
b = {1, 2, 3}
print(a + b)
'''
# Будет сгенерирована ошибка, потому что операция сложения (+) 
# не определена для множеств.


'''
Упражнение 1
Напишите программу, которая сравнивает два списка и выводит список 
с элементами, которые есть в первом списке, но отсутствуют во втором. 
'''
#Моё решение, не элегантное:
list1 = [10, 20, 30, 40, 50]
list2 = [20, 25, 30, 35, 40]

list1 = set(list1)
list2 = set(list2)

list3 = list1.difference(list2)
list3 = list(list3)
list1 = list(list1)
list2 = list(list2)

print("list1: ", list1)
print("list2: ", list2)
print("Разность списков: ", list3)

print("\n")

#Правильный ответ:
    
# два сравниваемых списка
list1 = [10, 20, 30, 40, 50]
list2 = [20, 25, 30, 35, 40]
# выводим списки
print ("list1:", list1)
print ("list2:", list2)
# находим разность списков
print ("Разность списков: ",  list (set(list1) - set (list2)))

print("\n")

'''
Упражнение 2
Пусть дано множество, которое представляет студентов:
    
Как видно, некоторые одновременно могут учиться и работать.

Напишите программу, которая находит

Всех людей в обоих группах

Всех людей, которые одновременно и учатся, и работают

Всех людей, которые только учатся, но не работают

Всех людей, которые либо только учатся, либо только работают, но не 
одновременно
'''

students = {"Tom", "Bob", "Sam"}

	
employees = {"Tom", "Bob", "Alex", "Mike"}

print("Все: ", students.union(employees))
print("И учатся, и работают: ", students.intersection(employees))
print("Только учатся, но не работают: ", students.difference(employees))
print("Либо только учатся, либо только работают: ", 
      students.symmetric_difference(employees))